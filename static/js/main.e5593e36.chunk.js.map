{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","type","pattern","title","onChange","required","Component","ContactList","contacts","onDelete","map","id","onClick","Filter","Phonebook","filter","addContact","newContact","uuidv4","removeContact","prevState","contact","target","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"gRAEMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAGb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAGF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNV,MAAOO,KAAKb,MAAMC,KAClBgB,SAAUJ,KAAKV,aACfe,UAAQ,OAIZ,2CAEE,uBACEJ,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNV,MAAOO,KAAKb,MAAME,OAClBe,SAAUJ,KAAKV,aACfe,UAAQ,OAIZ,wBAAQJ,KAAK,SAAb,gC,GAtDkBK,aA4DXpB,IC9DA,SAASqB,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC9C,OACE,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,8BACGD,EADH,KACWC,KAEX,wBAAQsB,GAAIA,EAAIC,QAASH,EAAzB,sBAJOE,QCJF,SAASE,EAAT,GAAsC,IAApBpB,EAAmB,EAAnBA,MAAOW,EAAY,EAAZA,SACtC,OACE,0DAEE,uBACEH,KAAK,OAELR,MAAOA,EACPW,SAAUA,O,ICDZU,E,4MACJ3B,MAAQ,CACNqB,SAAU,CACR,CAAEG,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD0B,OAAQ,I,EAGVC,WAAa,YAAuB,IAApB5B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEd4B,EAAa,CACjBN,GAAIO,cACJ9B,OACAC,UAGF,EAAKK,UAAS,gBAAGc,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAES,GAAH,mBAAkBT,S,EAM9BW,cAAgB,SAAA5B,GAEd,EAAKG,UAAS,SAAA0B,GAAS,MAAK,CAC1BZ,SAAUY,EAAUZ,SAASO,QAAO,SAAAM,GAClC,OAAOA,EAAQV,KAAOpB,EAAE+B,OAAOX,W,EAKrCY,aAAe,SAAAhC,GACb,EAAKG,SAAS,CAAEqB,OAAQxB,EAAEC,cAAcC,S,EAG1C+B,mBAAqB,WACnB,IAAMC,EAAmB,EAAKtC,MAAM4B,OAAOW,cAE3C,OAAO,EAAKvC,MAAMqB,SAASO,QAAO,SAAAM,GAAO,OACvCA,EAAQjC,KAAKsC,cAAcC,SAASF,O,4CAIxC,WACE,IAAQV,EAAWf,KAAKb,MAAhB4B,OAER,OACE,gCACE,2CACA,cAAC,EAAD,CAAajB,SAAUE,KAAKgB,aAE5B,0CACA,cAACH,EAAD,CAAQpB,MAAOsB,EAAQX,SAAUJ,KAAKuB,eACtC,cAAChB,EAAD,CACEC,SAAUR,KAAKwB,qBACff,SAAUT,KAAKmB,uB,GA3DDb,aAkETQ,ICnEfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5593e36.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    // console.log(e.currentTarget.name);\n    // console.log(e.currentTarget.value);\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","export default function ContactList({ contacts, onDelete }) {\n  return (\n    <ol>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button id={id} onClick={onDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\n// import { Component } from 'react';\n\n// class ContactList extends Component {\n//   render() {\n//     return (\n//       <ol>\n//         {this.props.contacts.map(({ id, name, number }) => (\n//           <li key={id}>\n//             <p>\n//               {name}: {number}\n//             </p>\n//             <button id={id} onClick={this.props.onDelete}>\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ol>\n//     );\n//   }\n// }\n// export default ContactList;\n","export default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        // name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    // console.log({ name, number });\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    // setTimeout(() => console.log(this.state.contacts), 1000);\n  };\n\n  removeContact = e => {\n    // console.log(e.target.id);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => {\n        return contact.id !== e.target.id;\n      }),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onDelete={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}